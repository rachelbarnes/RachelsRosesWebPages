<style>
    h4{
        color: cadetblue; 
    }
    h5{
        color: teal; 
    }
</style>
@{ 
    var RoundedPricePerOunce= Math.Round(ViewBag.currentingredient.pricePerOunce, 3); 
}
<br />
<h4>@ViewBag.currentingredient.measurement : @ViewBag.currentingredient.name</h4>
<h5>Price of Measured Consumption: $ @ViewBag.currentingredient.priceOfMeasuredConsumption</h5>
<br />
<h4>Edit @ViewBag.currentingredient.name Information</h4>
<h5><a href="/home/DeleteIngredient?name=@ViewBag.currentingredient.name&measurement=@ViewBag.currentingredient.measurement">Delete ingredient from ingredient table</a></h5>
<form action="/home/EditIng" method="post">
    @*this method works without putting the parameters here too... looking specifically at line 32 of this commit*@
    <h5>Name: @ViewBag.currentingredient.name</h5>

    <input name="updatedName" placeholder="@ViewBag.currentingredient.name"/>
    <input type="submit" value="Update Name" />
    <h5>Measurement: @ViewBag.currentingredient.measurement</h5>
    <input name="updatedMeasurement" placeholder="@ViewBag.currentingredient.measurement"/>
    <input type="submit" value="Update Measurement" />
    <h5>Density: @ViewBag.currentingredient.density</h5>
    <input name="updatedDensity" placeholder="@ViewBag.currentingredient.density"/>
    <input type="submit" value="Update Density" />
    <h5>Type: @ViewBag.currentingredient.typeOfIngredient</h5>
    <input name="updatedType" placeholder="@ViewBag.currentingredient.typeOfIngredient"/>
    <input type="submit" value="Update Type" />
    <h5>Classification: @ViewBag.currentingredient.classification</h5>
    <input name="updatedClassification" placeholder="@ViewBag.currentingredient.classification" />
    <input type="submit" value="Update Ingredient Classification" />
    <h5>Expiration Date: @ViewBag.currentingredient.expirationdate</h5>
    <input name="updatedExpirationDate" placeholder="@ViewBag.currentingredient.expirationdate" />
    <input type="submit" value="Update Ingredient Expiration Date" />
    <h5>Selling Weight: @ViewBag.currentingredient.sellingWeight</h5>
    <input name="updateSellingWeight" placeholder="@ViewBag.currentingredient.sellingWeight"/>
    <input type="submit" value="Update Selling Weight" />
    <h5>Selling Price: $ @ViewBag.currentingredient.sellingPrice (Price Per Ounce: $ @RoundedPricePerOunce)</h5>
    <input name="updatedSellingPrice" placeholder="@ViewBag.currentingredient.sellingPrice" />
    <input type="submit" value="Update Selling Price" />
    @*<h5>Price Per Ounce $ @ViewBag.currentingredient.pricePerOunce</h5>*@
</form>
<form action="/home/ResetSellingPrice" method="post">
    @*<h5><b>Reset Selling Price: </b></h5>*@
    <input type="submit" value="Reset Selling Price" />
</form>
<br />

<h4>List of Item Responses:</h4>
<ul>
    @foreach (var itemresponse in @ViewBag.currentitemresponselist) {
        <li>
            <p>@itemresponse.name : @itemresponse.salePrice</p>
            @*I want to auto populate ingredients if I choose another item response, which means i need an item reponse parser (separate price, name, selling weight are generally the ones that i would have to worry about)
                        another thing that i would liek to diwht it is involve the packs... most people who this is for will be buying in bulk, so accomodate them... if you see packs, associate the number with it(let the user change it based on what's given, so just do another form)
                        but don't not include those if i don't have to *@
        </li>
    }
</ul>
<h4>Other Item Responses (including other selling weighs)</h4>
<ul>
    @foreach (var itemresponse in ViewBag.currentitemresponselistnoweight) {
        <li>
            <p>@itemresponse.name : @itemresponse.salePrice</p>
        </li>
    }
</ul>
@*Need to:
    when i click to view the details of an ingredient, i'm met with an error where it ry to convert the weight to ounces...
        i need to debug and see what's happening.


    give a list of items from online that match our ingredient description
    be able to autopopulate those fields based on which item is chosen, or be able to manually fill them in
    have a check list of recipes that have been made, and a record of how many times they've been made...
        when they have been made, ajust the consumption table, otherwise, don't do anything with the consumption table until then, or make ounces consumed 0 instead of the measurement...
    do some more with the looks of the View... it looks pretty painfully plain

    i have a drop down option for the ingredients from queryIngredients... i'll have to test if the distinct is working...
     have a drop down of ingredient densities from queryDensities so we can choose one or konw if we have to input one

    have a detailed description of what's happening with the classification and type for what a user would need/like to know and why it's so impt...
        put as a readme or as footnotes in the bottom... but they need to be filled in, esp for density and more esp for eggs

*@
